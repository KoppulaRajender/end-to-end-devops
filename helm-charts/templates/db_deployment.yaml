---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-database
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.db.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-database
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-database
      name: {{ .Release.Name }}-database
    spec:
      serviceAccount: {{ .Values.global.serviceaccount.name }}
      initContainers:
      - name: {{ .Release.Name }}-db-init
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-initdb-config
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-database-password
              key: db-password
        image: "{{ .Values.global.imageCredentials.repositoryUriPrefix }}/{{ .Values.db.image.name }}:{{ .Values.db.image.tag }}"
        command: [ "sh", "-c", "[ -f $PGDATA/server.key ] && chmod 600 $PGDATA/server.key || echo 'OK' " ]
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-database
      containers:
      - name: db
        image: "{{ .Values.global.imageCredentials.repositoryUriPrefix }}/{{ .Values.db.image.name }}:{{ .Values.db.image.tag }}"
        imagePullPolicy: "{{ .Values.db.image.pullPolicy }}"
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-initdb-config
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-database-password
              key: db-password
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-database
        ports:
        - containerPort: 5432
          protocol: TCP

      volumes:
      - name: postgres-database
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-database-pvc
